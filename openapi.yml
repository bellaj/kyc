swagger: "2.0"
info:
  description: "KYC API"
  version: "1.0.0"
  title: "KYC API"
  termsOfService: "http://kyc.io/terms/"
  contact:
    email: "apiteam@kyc.io"
 
host: "127.0.0.1:8081"
basePath: "/v2"
tags:

- name: "organisme"
  description: "Organismes management"
- name: "client"
  description: "Operations about user"
 
schemes:
- "https"
- "http"
paths:

  /organisme:
    post:
      tags:
      - "organisme"
      summary: "Add a new organisme to the KYC network"
      description: ""
      operationId: "addOrganisme"
      consumes:
      - "application/json"
      produces:
       - "application/json"
      parameters:
      - in: "query"
        name: "name"
        type: "string"
        description: "Organisme name"
        required: true
      - in: "query"
        name: "oid"
        type: "string"
        description: "Organisme Id"
        required: true
        
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref:  "#/definitions/ApiResponse"
        405:
          description: "Invalid input"
        404:
          description: "not found"
          
  /organisme/{oid}/personel/{oid}:
    post:
      tags:
      - "organisme"
      summary: "assign a new personel to an organimse"
      description: ""
      operationId: "addPersonel"
      consumes:
      - "application/json"
      produces:
       - "application/json"
      parameters:
      - in: "path"
        name: "oid"
        type: "string"
        required: true
        
      - in: "path"
        name: "address"
        type: "string"
        description: "blockchain address"
        required: true 
 
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref:  "#/definitions/ApiResponse"
        405:
          description: "Invalid input" 
 
  /client:
    post:
      tags:
      - "client"
      summary: "Enroll a new client"
      description: "Enroll a new client for an organisme"
      operationId: "addClient"
      consumes:
      - "application/json"
      produces:
       - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "client object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Client"
      - in: "query"
        name: "oid"
        description: "Id of the organisme enrolling the client"
        type: "string"
        required: false   
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref:  "#/definitions/ApiResponse"
        405:
          description: "Invalid input" 

  /client/{uuid}:
    put:
      tags:
      - "client"
      summary: "Update an existing client identified by iuud"
      description: "Update an existing client identified by iuud"
      operationId: "updateClient"
      consumes:
      - "application/json"
      produces:
       - "application/json"
      parameters:
      - in: "path"
        name: "uuid"
        type: "string"
        description: "use object that needs to be updated"
        required: true
      - in: "body"
        name: "body"
        description: "use object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Client"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref:  "#/definitions/ApiResponse"
        404:
          description: "Client not found"
        405:
          description: "Validation exception"
 
  /client/validateByCin/{cin}:
    get:
      tags:
      - "client"
      summary: "validate client's status"
      description: "fetch client by cin and validate its status"
      operationId: "validateByCin"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "cin"
        type: "string"
        required: true 
        description: "User's CIN"

      - in: "query"
        name: "oid"
        type: "string"
        description: "organisme's ID"
        required: true   
        
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref:  "#/definitions/ApiResponse"
        400:
          description: "Invalid status value"
          
  /client/validateByUuid/{uuid}:
    get:
      tags:
      - "client"
      summary: "validate client's status"
      description: "fetch client by Uiid and validate its status"
      operationId: "validateByUuid"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "uuid"
        type: "string"
        description: "uuid : User unique Id"
        required: true 
        
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref:  "#/definitions/ApiResponse"

        400:
          description: "Invalid status value"
          
  /client/invalidateByCin/{cin}:
    get:
      tags:
      - "client"
      summary: "invalidate client's enrollement"
      description: "invalidate client's kyc status. User is identified by CIN"
      operationId: "invalidateByCin"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "cin"
        type: "string"
        required: true 
        description: "User's CIN"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref:  "#/definitions/ApiResponse"
 
        400:
          description: "Invalid status value"
          
  /client/invalidateByUuid/{uuid}:
    get:
      tags:
      - "client"
      summary: "Reject client's enrollement"
      description: "invalidate client's kyc status. User is identified by an uuid"
      operationId: "invalidateByUuid"
      produces:
      - "application/json"
      parameters:
      - name: "uuid"
        in: "path"
        description: "Status values that need to be considered for filter"
        required: true
        type: "string"
        
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref:  "#/definitions/ApiResponse"
 
        400:
          description: "Invalid status value"
          
  /client/checkByCin/{cin}:
    get:
      tags:
      - "client"
      summary: "Check clients status by CIN"
      description: "Check the status of a client identified by CIN"
      operationId: "checkByCin"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "cin"
        type: "string"
        required: true 
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref:  "#/definitions/StatusTag"
 
        400:
          description: "Invalid status value"
          
  /client/checkByUuid/{uuid}:
    get:
      tags:
      - "client"
      summary: "Check clients status by UUID"
      description: "Check the status of a client identified by  UUID"
      operationId: "checkByUuid"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "uuid"
        type: "string"
        required: true 
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref:  "#/definitions/StatusTag"
 
        400:
          description: "Invalid status value"
          
  /client/{uuid}/addOwnerOrganisme/{oid}:
    get:
      tags:
      - "client"
      summary: "Add organisme "
      description: "Add the right to access client's details to an organisme"
      operationId: "addOwner"
      produces:
      - "application/json"
      parameters:
      - name: "oid"
        in: "path"
        description: "Organisme ID"
        required: true
        type: "string"
      - name: "uuid"
        in: "path"
        description: "Client uuid"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref:  "#/definitions/ApiResponse"
 
        400:
          description: "Invalid status value"
          
          
          
          
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://kyc.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your kyc status"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
 
  Organisme:
    type: "object"
    properties:
      oid:
        type: "string"
      name:
        type: "string"
    xml:
      name: "Category"
      
 
  Client:
    type: "object"
    properties:
      uuid:
        type: "integer"
        format: "int64"

      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "string"
        description: "client Status: unvalid ,valid, pending"
    xml:
      name: "client"
      
  StatusTag:
    type: "object"
    properties:
      uuid:
        type: "integer"
        format: "int64"
      status:
        type: "string"
        enum: [valid, pending, invalid]
        example: "approved"
 

  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
        enum: [error, response]
        example: "error" 
      message:
        type: "string"
 
